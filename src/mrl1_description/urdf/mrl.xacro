<?xml version="1.0"?>
<robot name="mrl" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
<xacro:property name="base_l" value="0.25" />
<xacro:property name="base_w" value="0.25" />
<xacro:property name="base_h" value="0.12" /> <!--base height-->

<xacro:property name="wheel_r" value="0.08" />
<xacro:property name="wheel_l" value="0.05" /> <!--wheel thickness-->

<xacro:property name="test" value="${wheel_r+wheel_l}" />
<xacro:property name="camera_link" value="0.05" /> 


<!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <!--xacro:include filename="$(find mrl1_description)/urdf/rrbot.gazebo" /-->
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find mrl1_description)/urdf/materials.xacro" />

<!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
             navigation stack depends on this frame -->
<!--link name="base_footprint">
            <inertial>
                <mass value="0.0001" />
                <origin xyz="0 0 0" />
                <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                         iyy="0.0001" iyz="0.0" 
                         izz="0.0001" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
                <material name="Green" />
            </visual>
            
            <collision>
                <origin xyz="0 0 0.128" rpy="0 0 0" />
                <geometry>
                  <box size="0.001 0.001 0.001" />
                </geometry>
            </collision>
        </link>

 <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 0" />
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint-->

<link name="base_link">
    <visual>
      <geometry>
        <box size="0.25 0.25 0.12"/>
      </geometry>
     <origin rpy="0 0 0" xyz="0 0 0"/> <!--forward is 'y', up is 'z'-->
     <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.25 0.25 0.12"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="3.6"/>
      <!--inertia ixx="${36*(base_l*base_l+base_h*base_h)/12}" ixy="0.0" ixz="0.0" iyy="${36*(base_w*base_w+base_h*base_h)/12}" iyz="0.0" izz="${36*(base_l*base_l+base_w*base_w)/12}"/-->
      <inertia ixx="0.2307" ixy="0.0" ixz="0.0" iyy="0.2307" iyz="0.0" izz="0.2307"/>
    </inertial>

  </link>

<!--Back Caster(left)-->
<link name="caster_left">
    <visual>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
	<origin xyz="0 0 0"/> <!--this is relative to the joint frame defined in 'joint' tag-->
     <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>

    <collision>
     <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="left_caster_joint" type="continuous">
  <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="caster_left"/>
     <origin xyz="0.1 0.124 -0.07" rpy="0 1.57 0"/> <!--this is relative to the 'parent' frame-->
  </joint>

<!--Back Caster(right)-->
<link name="caster_right">
    <visual>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
	<origin xyz="0 0 0"/> <!--this is relative to the joint frame defined in 'joint' tag-->
     <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>

    <collision>
     <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
  </link>

  <joint name="right_caster_joint" type="continuous">
  <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="caster_right"/>
     <origin xyz="-0.1 0.124 -0.07" rpy="0 1.57 0"/> <!--this is relative to the 'parent' frame-->
  </joint>


<!--left wheel-->
<link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
	<origin xyz="0 0 0"/>
     <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>

    <collision>
     <origin xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="1"/>
      <!--inertia ixx="${0.1*(3*wheel_r^2+wheel_h^2)/12}" ixy="0.0" ixz="0.0" iyy="${0.1*(3*wheel_r^2+wheel_h^2)/12}" iyz="0.0" izz="${0.1*wheel_r^2/2}"/-->
<inertia ixx="0.0032" ixy="0.0" ixz="0.0" iyy="0.00368" iyz="0.0" izz="0.00368"/>
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
  <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
     <origin xyz="0.151 -0.06 0" rpy="0 1.57 0"/>
  </joint>

<!--right wheel-->
<link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
	<origin xyz="0 0 0"/>
    <material name="black"/>
    </visual>

   <collision>
    <origin xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.08"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="1"/>
      <!--inertia ixx="${0.1*(3*wheel_r^2+wheel_h^2)/12}" ixy="0.0" ixz="0.0" iyy="${0.1*(3*wheel_r^2+wheel_h^2)/12}" iyz="0.0" izz="${0.1*wheel_r^2/2}"/-->
     <inertia ixx="0.0032" ixy="0.0" ixz="0.0" iyy="0.00368" iyz="0.0" izz="0.00368"/>
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
  <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
     <origin xyz="-0.151 -0.06 0" rpy="0 1.57 0"/>
  </joint>


<!--hokuyo laser-->
  <link name="hokuyo_link">
    <visual>
    <geometry>
        <mesh filename="package://mrl1_description/meshes/hokuyo.dae"/>
      </geometry>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>


    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
	<box size="0.06 0.06 0.06"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="0 -0.1 0.09" rpy="0 0 -1.57"/> 
    <parent link="base_link"/>
    <child link="hokuyo_link"/>
  </joint>


 <!--Kinect Stand-->

 <link name="kinect_stand">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <!--material name="red"/-->
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

<joint name="kinect_stand_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0.05 0.0825" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="kinect_stand"/>
  </joint>


 <!-- Kinect Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<mesh filename="package://mrl1_description/meshes/kinect.dae"/>
      </geometry>
      <!--material name="red"/-->
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

<joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 -0.03 0.075" rpy="0 0 -1.57"/>
    <parent link="kinect_stand"/>
    <child link="camera_link"/>
  </joint>

<!--Transmission to left motor-->
<transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint"/>
    <actuator name="left_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

<!--Transmission to right motor-->
<transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint"/>
    <actuator name="right_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


<!--GAZEBO COMPONENTS-->

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/mrl</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Base Footprint -->
  <gazebo reference="base_footprint">
    <material>Gazebo/white</material>
  </gazebo>


  <!-- Base Link -->
  <gazebo reference="base_link">
    <material>Gazebo/white</material>
  </gazebo>

  <!-- Back Caster(Left) -->
  <gazebo reference="caster_left">
    <material>Gazebo/white</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
  </gazebo>

  <!-- Back Caster(right) -->
  <gazebo reference="caster_right">
    <material>Gazebo/white</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
  </gazebo>

  <!-- Left Wheel -->
  <gazebo reference="left_wheel">
    <material>Gazebo/black</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <dampingFactor>0.4</dampingFactor>
  </gazebo>


  <!-- Right Wheel -->
  <gazebo reference="right_wheel">
    <material>Gazebo/black</material>
     <mu1>0.5</mu1>
     <mu2>0.5</mu2>
     <dampingFactor>0.4</dampingFactor>
  </gazebo>

 <!-- Kinect Stand -->
  <gazebo reference="kinect_stand">
    <material>Gazebo/black</material>
  </gazebo>


  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>4</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>1.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading.-->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/mrl/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

<!-- camera -->
  <!--gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type-->
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <!--mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>mrl/camera1</cameraName--> <!--CHANGE HERE FOR DIFFERENT ROBOTS!!!-->
        <!--imageTopicName>mrl_image_raw</imageTopicName>
        <cameraInfoTopicName>mrl_camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo-->

<!--Kinect-->
<!-- SENSOR -->
<gazebo reference="camera_link">
    <sensor type="depth" name="openni_camera">       
        <always_on>1</always_on>
        <visualize>true</visualize>           
        <camera>
            <horizontal_fov>1.047</horizontal_fov>  
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
            <alwaysOn>true</alwaysOn>
                <updateRate>10.0</updateRate>
                <cameraName>camera</cameraName>
                <frameName>camera_link</frameName>                   
            <imageTopicName>mrlKinect/rgb/image_raw</imageTopicName>
            <depthImageTopicName>mrlKinect/depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>mrlKinect/depth/points</pointCloudTopicName>
            <cameraInfoTopicName>mrlKinect/rgb/camera_info</cameraInfoTopicName>              
            <depthImageCameraInfoTopicName>mrlKinect/depth/camera_info</depthImageCameraInfoTopicName>            
            <pointCloudCutoff>0.4</pointCloudCutoff>                
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            <CxPrime>0.0</CxPrime>
            <Cx>0.0</Cx>
            <Cy>0.0</Cy>
            <focalLength>0.0</focalLength>
            </plugin>
    </sensor>
</gazebo>

</robot>































